import cv2
import numpy as np

img = cv2.imread(r'C:\Users\i-asya\Desktop\Software\BV-Tutorial\Step4\Basis4.png', 0)
            
def mini_filter(img):
    height, width= img.shape
    output_img= img.copy()
    
    step= 1
    for y in range(step, height-step-1):
        for x in range( step, width - step-1):
            matrix=[]
            for ky in range( y- step, y+ step):
                for kx in range(x- step, x+ step):
                    matrix.append(img[ky][kx])
                    min_filter= min(matrix)
            output_img[y][x]= min_filter
    return output_img
    
    

            

cv2.imshow('Original Image', img)
cv2.imshow('filtered Image', mini_filter(img))
cv2.waitKey(0)
cv2.destroyAllWindows()
-------------------------------------------------------------
# muss auf: shape, append, min verzichten
-------------------------------------------------------------

import cv2
import numpy as np

img = cv2.imread(r'C:\Users\i-asya\Desktop\Software\BV-Tutorial\Step4\Basis4.png', 0)
   
         
def mini_filter(img):
    height, width= img.shape
    output_img= img.copy()
    
    step= 1
    
    # Von Step bis y - Step -1, weil RÃ¤nder keine genugende Pixel haben
    for y in range(step, height-step-1):
        for x in range( step, width - step-1):
            matrix=[[255]* 3 for _ in range(3)]
            n=0
            m=0
            for ky in range( y- step, y+ step):
                for kx in range(x- step, x+ step):
                    #statt matrix.append() folgt...
                    matrix[m][n]= img[ky][kx]
                    n+=1
                n=0
                m+=1

            # statt min() folgt...
            min_wert=matrix[0][0]
            for i in range(3):
                for k in range(3):
                    if min_wert > matrix[i][k]:
                        min_wert = matrix[i][k]
                        
            output_img[y][x]= min_wert

    return output_img
    

cv2.imshow('Original Image', img)
cv2.imshow('filtered Image', mini_filter(img))
cv2.waitKey(0)
cv2.destroyAllWindows()

