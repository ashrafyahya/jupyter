import cv2

img = cv2.imread(
  r'C:\Users\i-asya\Desktop\Software\BV-Tutorial\Step6\Basis6B.png', 0)
#colors = [(255, 0, 0), (0, 255, 0), (0, 0, 255), (255, 0, 255), (255, 255, 0), (0, 255, 255)]

colors = [50, 100, 150, 200, 250]
def colored_pic(img, kernel_size):
  
  objekt = 0
  height, width = img.shape
  output_img = img.copy()
  step = kernel_size // 2
  in_size = kernel_size * kernel_size
  #kernel-array
  kernel = [[1] * width for _ in range(in_size)]
  neue_kernel = [1 for _ in range(in_size)]
  median_wert = kernel[0]
  farbe = neue_kernel[0]

  #Erstens: Bild durchgehen
  for y in range(step, height - step):
    for x in range(step, width - step):
      n = 0
      s = 0
      for ky in range(y - step, y + step + 1):
        for kx in range(x - step, x + step + 1):
          #kernel ausfÃ¼llen
          neue_kernel[n] = img[ky][kx] * kernel[s][n]
          n += 1
        s += 1
      #statt sort() folgt..
      for k in range(in_size):
        for m in range(in_size):
          if neue_kernel[m] > neue_kernel[k]:
            neue_kernel[m], neue_kernel[k] = neue_kernel[k], neue_kernel[m]
      median_wert = neue_kernel[in_size // 2]
      #----------------------------------------
      
      for i in range(in_size):
          farbe = neue_kernel[i]
          if farbe != 0 and farbe != 255:
              output_img[y][x] = farbe
              break
          
      if median_wert == 255:
         farbe = colors[objekt]
         output_img[y][x] = farbe
            
      if median_wert == 0:
          output_img[y][x] = 0
          
       
      for i in range(2):
          if img[y][x]==0 and img[y][x+i] == 255 :
              #if img[y][x]==0 and img[y+i][x] == 255:
                  objekt += 1
                  if objekt > 3:
                    objekt = 0
                
    output_img[y][x] = farbe
  return output_img


kernel_size = 3
colored_img = colored_pic(img, kernel_size)
#cv2.imshow('Original Image', img)
cv2.imshow('Colored Image', colored_img)
cv2.waitKey(0)
cv2.destroyAllWindows()
