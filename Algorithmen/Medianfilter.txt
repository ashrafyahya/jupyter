def median_filter(input_img, kernel_size):
    height = len(input_img)
    width = len(input_img[0])
    half_kernel = kernel_size // 2
    output_img = [[0] * width for _ in range(height)]
    
    for y in range(half_kernel, height - half_kernel):
        for x in range(half_kernel, width - half_kernel):
            region = []
            for ky in range(y - half_kernel, y + half_kernel + 1):
                for kx in range(x - half_kernel, x + half_kernel + 1):
                    region.append(input_img[ky][kx])
            region.sort()
            median_index = len(region) // 2
            median_value = region[median_index]
            output_img[y][x] = median_value
            
    return output_img

# Beispielbild (Graustufen)
input_img = [[4, 9, 2, 5],
             [3, 5, 8, 1],
             [7, 2, 6, 0],
             [6, 3, 2, 8]]

kernel_size = 3
filtered_img = median_filter(input_img, kernel_size)

print("Input Image:")
for row in input_img:
    print(row)
print("Filtered Image:")
for row in filtered_img:
    print(row)
-------------------------------------------------------